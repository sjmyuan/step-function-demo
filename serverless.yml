service: step-function-demo

custom:

provider:
  name: aws
  runtime: nodejs6.10
  stage: stg
  region: ap-northeast-1
  timeout: 30

functions:
  addNumber:
    handler: app.addNumber
  subNumber:
    handler: app.subNumber
  fibonacci:
    handler: app.fibonacci

stepFunctions:
  stateMachines:
    addDemo:
      name: addDemo
      definition:
        Comment: "An add demo"
        StartAt: AddNumber
        States:
          AddNumber:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-addNumber
            End: true
    waitDemo:
      name: waitDemo
      definition:
        Comment: "An wait demo"
        StartAt: Wait10s
        States:
          Wait10s:
            Type: Wait
            Seconds: 10
            End: true
    choiceDemo:
      name: choiceDemo
      definition:
        Comment: "An choice demo"
        StartAt: EntryPoint
        States:
          EntryPoint:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-addNumber
            ResultPath: "$.sum"
            Next: ChoiceState
          ChoiceState:
            Type: Choice
            Choices:
            - Variable: "$.sum"
              NumericEquals: 1
              Next: Pass1State
            Default: DefaultState
          Pass1State:
            Type: Pass
            Result:
              debug: "pass1 state"
            ResultPath: "$.debug"
            End: true
          DefaultState:
            Type: Pass
            Result:
              debug: "default state"
            ResultPath: "$.debug"
            End: true
    parallelDemo:
      name: parallelDemo
      definition:
        Comment: "An parallel demo"
        StartAt: Parallel
        States:
          Parallel:
            Type: Parallel
            Next: FinalState
            Branches:
            - StartAt: Add
              States:
                Add:
                  Type: Task
                  Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-addNumber
                  End: true
            - StartAt: Sub
              States:
                Sub:
                  Type: Task
                  Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-subNumber
                  End: true
          FinalState:
            Type: Pass
            End: true
    fibonacciDemo:
      name: fibonacciDemo
      definition:
        Comment: "Fibonacchi Number Generator"
        StartAt: EntryPoint
        States:
          EntryPoint:
            Type: Choice
            Choices:
            - Variable: "$.num"
              NumericEquals: 0
              Next: OutputResult
            Default: GenerateNext
          OutputResult:
            Type: Pass
            OutputPath: "$.n2"
            End: true
          GenerateNext:
            Type: Task
            Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-fibonacci
            Next: EntryPoint
plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters
